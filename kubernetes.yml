---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jekyll-env
  labels:
    app.kubernetes.io/name: jekyll
    app.kubernetes.io/instance: jekyll-env
    app.kubernetes.io/component: static-site
    app.kubernetes.io/part-of: jekyll
    app.kubernetes.io/managed-by: k8s
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jekyll
      app.kubernetes.io/instance: jekyll-env
      app.kubernetes.io/component: static-site
      app.kubernetes.io/part-of: jekyll
      app.kubernetes.io/managed-by: k8s
  replicas: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jekyll
        app.kubernetes.io/instance: jekyll-env
        app.kubernetes.io/component: static-site
        app.kubernetes.io/part-of: jekyll
        app.kubernetes.io/managed-by: k8s
    spec:
      imagePullSecrets:
        - name: registry-repository
      containers:
        - name: jekyll-env
          image: registry.digitalocean.com/repository/jekyll-version
          imagePullPolicy: Always
          resources:
            requests:
              memory: '256Mi'
              cpu: '50m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          ports:
            - containerPort: 4000
          livenessProbe:
            initialDelaySeconds: 300
            httpGet:
              scheme: HTTP
              path: /
              port: 4000
          readinessProbe:
            initialDelaySeconds: 0
            httpGet:
              scheme: HTTP
              path: /
              port: 4000
---
apiVersion: v1
kind: Service
metadata:
  name: jekyll-env
  labels:
    app.kubernetes.io/name: jekyll
    app.kubernetes.io/instance: jekyll-env
    app.kubernetes.io/component: static-site
    app.kubernetes.io/part-of: jekyll
    app.kubernetes.io/managed-by: k8s
spec:
  ports:
    - port: 80
      targetPort: 4000
  selector:
    app.kubernetes.io/name: jekyll
    app.kubernetes.io/instance: jekyll-env
    app.kubernetes.io/component: static-site
    app.kubernetes.io/part-of: jekyll
    app.kubernetes.io/managed-by: k8s
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: jekyll-env
  labels:
    app.kubernetes.io/name: jekyll
    app.kubernetes.io/instance: jekyll-env
    app.kubernetes.io/component: static-site
    app.kubernetes.io/part-of: jekyll
    app.kubernetes.io/managed-by: k8s
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: jekyll-host
    external-dns.alpha.kubernetes.io/cloudflare-proxied: 'false'
    external-dns.alpha.kubernetes.io/ttl: '300'
spec:
  tls:
    - hosts:
        - 'jekyll-host'
      secretName: jekyll-cert
  rules:
    - host: jekyll-host
      http:
        paths:
          - backend:
              serviceName: jekyll-env
              servicePort: 80
